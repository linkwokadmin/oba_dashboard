<div class="page-title-wrapper">
    <h2 class="page-title">Dashboard</h2>
</div>




<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default-light rounded">
            <div class="panel-heading">
                <div class="panel-title">Stream wise Report - Average delay in hours</div>
                <div class="panel-tools">
                    <%= simple_form_for :stream_report_filter, url: :root, method: :get, html: {class: 'form-inline'} do |f| %>
                        <%= f.input :from_date, as: :hidden, label: false, wrapper: false %>
                        <%= f.input :to_date, as: :hidden, label: false, wrapper: false %>
                        <%= f.input :stream, collection: Stream::STREAMS, selected: @stream.name, include_blank: false, label: false, wrapper: false, input_html: {class: 'default-select2 input-sm rounded m-right-5'} %>
                        <%= f.input :all_stages, as: :hidden,label: false, wrapper: false ,:input_html => {:value => "yes"} %>
                        <div id="stream-report-daterange" class="btn btn-sm btn-default-outline rounded m-right-5">
                            <i class="fa fa-calendar m-right-5"></i>
                            <span></span>
                            <i class="fa fa-angle-down m-left-5"></i>
                        </div>
                        <%= f.submit 'Filter', class: 'btn btn-success btn-sm rounded rippler', data: {disable_with: 'Processing...'} %>
                    <% end %>
                </div>
            </div>

            <div class="panel-body">

                <table class="table table-condensed table-hover">
                    <thead>
                    <tr>
                        <th>#</th>
                        <th>Product</th>
                        <% Stage.all.each do |s| %>
                        <th><%= s.name %></th>
                        <% end %>

                    </tr>
                    </thead>
                    <tbody>
                    <% if @product_data.present? %>
                        <% @product_data.each_with_index do |p, index| %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= Product.find(p[0]).name %></td>
                              <% Stage.all.each do |s| %>
                              <td><%= (p[1][s.id]/3600.0).round(2) %></td>
                                <% end %>
<!--                                <td class="<%#= delay_view_class_for(stream_status[:delay]) %>"><%#= ((stream_status[:delay] > 0) ? distance_of_time_in_words(stream_status[:delay]) : 'None') %></td>-->
                            </tr>
                        <% end %>
                    <% end %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>




<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default-light rounded">
            <div class="panel-heading">
                <div class="panel-title">Product wise Report - Delay Statistics</div>
                <div class="panel-tools">
                    <%= simple_form_for :product_report_filter, url: :root, method: :get, html: {class: 'form-inline'} do |f| %>
                        <%= f.input :from_date, as: :hidden, label: false, wrapper: false %>
                        <%= f.input :to_date, as: :hidden, label: false, wrapper: false %>
                        <%#= f.input :stream, collection: Stream::STREAMS, selected: @stream.name, include_blank: false, label: false, wrapper: false, input_html: {class: 'default-select2 input-sm rounded m-right-5'} %>
                        <%= f.input :all_stages, as: :hidden,label: false, wrapper: false ,:input_html => {:value => "yes"} %>
                        <div id="product-report-daterange" class="btn btn-sm btn-default-outline rounded m-right-5">
                            <i class="fa fa-calendar m-right-5"></i>
                            <span></span>
                            <i class="fa fa-angle-down m-left-5"></i>
                        </div>
                        <%= f.submit 'Filter', class: 'btn btn-success btn-sm rounded rippler', data: {disable_with: 'Processing...'} %>
                    <% end %>
                </div>
            </div>

            <div class="panel-body">

                <table class="table table-condensed table-hover">
                    <thead>
                    <tr>
                        <th>#</th>
                        <th>Product</th>
                        <th>No of Batches</th>
                        <% Stage.all.each do |s| %>
                        <th colspan="5" class="text-center"><%= s.name %> (delay in hrs)</th>
                        <% end %>

                    </tr>
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <% Stage.all.each do |s| %>
                        <th>Min</th>
                        <th>Avg</th>
                        <th>Max</th>
                        <th>SOP</th>
                        <th>Chart</th>
                        <% end %>

                    </tr>


                    </thead>
                    <tbody>
                    <% if @product_wise_data.present? %>

                        <% @product_wise_data.each_with_index do |p, index| %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= Product.find(p[0]).name %></td>
                                <td><%= p[2] %></td>
                              <% Stage.all.each do |s| %>
<!--                              <td><%#= (p[1][s.id]/3600.0).round(2) %></td>-->
                                <td><%= (@product_batch_delay_data[p[0]][s.id].min / 3600).round(2) rescue "NA" %></td>
                                <td><%= ((@product_batch_delay_data[p[0]][s.id].reduce(:+).to_f / @product_batch_delay_data[p[0]][s.id].size)/3600).round(2) rescue "NA" %></td>
                                <td><%= (@product_batch_delay_data[p[0]][s.id].max / 3600).round(2) rescue "NA" %></td>
                                <td><%= Product.find(p[0]).master_bmrs.where(stage: s).first.bct/3600 %></td>
                                <td><a href="#" onclick="initScatterChart('<%= @chart_data[p[0]][s.id].to_json %>','<%= Product.find(p[0]).master_bmrs.where(stage: s).first.bct/3600 %>','<%= ((@chart_data[p[0]][s.id].pluck(:y).reduce(:+).to_f / @chart_data[p[0]][s.id].pluck(:y).size)/3600).round(2) %>')">View Chart</a></td>
                                <% end %>

<!--                                <td class="<%#= delay_view_class_for(stream_status[:delay]) %>"><%#= ((stream_status[:delay] > 0) ? distance_of_time_in_words(stream_status[:delay]) : 'None') %></td>-->
                            </tr>
                        <% end %>
                    <% end %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>





<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default-light rounded">
            <div class="panel-heading">
                <div class="panel-title">Product wise Report - Actual BCT Statistics</div>
                <div class="panel-tools">
                    <%= simple_form_for :product_report_filter_bct, url: :root, method: :get, html: {class: 'form-inline'} do |f| %>
                        <%= f.input :from_date, as: :hidden, label: false, wrapper: false %>
                        <%= f.input :to_date, as: :hidden, label: false, wrapper: false %>
                        <%#= f.input :stream, collection: Stream::STREAMS, selected: @stream.name, include_blank: false, label: false, wrapper: false, input_html: {class: 'default-select2 input-sm rounded m-right-5'} %>
                        <%= f.input :all_stages, as: :hidden,label: false, wrapper: false ,:input_html => {:value => "yes"} %>
                        <div id="product-report-daterange" class="btn btn-sm btn-default-outline rounded m-right-5">
                            <i class="fa fa-calendar m-right-5"></i>
                            <span></span>
                            <i class="fa fa-angle-down m-left-5"></i>
                        </div>
                        <%= f.submit 'Filter', class: 'btn btn-success btn-sm rounded rippler', data: {disable_with: 'Processing...'} %>
                    <% end %>
                </div>
            </div>

            <div class="panel-body">

                <table class="table table-condensed table-hover">
                    <thead>
                    <tr>
                        <th>#</th>
                        <th>Product</th>
                        <th>No of Batches</th>
                        <% Stage.all.each do |s| %>
                        <th colspan="5" class="text-center"><%= s.name %> (delay in hrs)</th>
                        <% end %>

                    </tr>
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <% Stage.all.each do |s| %>
                        <th>Min</th>
                        <th>Avg</th>
                        <th>Max</th>
                        <th>SOP</th>
                        <th>Chart</th>
                        <% end %>

                    </tr>


                    </thead>
                    <tbody>
                    <% if @product_wise_data_bct.present? %>

                        <% @product_wise_data_bct.each_with_index do |p, index| %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= Product.find(p[0]).name %></td>
                                <td><%= p[2] %></td>
                              <% Stage.all.each do |s| %>
<!--                              <td><%#= (p[1][s.id]/3600.0).round(2) %></td>-->
                                <td><%= (@chart_data[p[0]][s.id].min / 3600).round(2) rescue "NA" %></td>
                                <td><%= ((@chart_data[p[0]][s.id].reduce(:+).to_f / @chart_data[p[0]][s.id].size)/3600).round(2) rescue "NA" %></td>
                                <td><%= (@chart_data[p[0]][s.id].max / 3600).round(2) rescue "NA" %></td>
                                <td><%= Product.find(p[0]).master_bmrs.where(stage: s).first.bct/3600 %></td>
                                <td><a href="#" onclick="initScatterChart('<%= @chart_data[p[0]][s.id].to_json %>','<%= Product.find(p[0]).master_bmrs.where(stage: s).first.bct/3600 %>','<%= ((@chart_data[p[0]][s.id].pluck(:y).reduce(:+).to_f / @chart_data[p[0]][s.id].pluck(:y).size)/3600).round(2) %>')">View Chart</a></td>
                                <% end %>

<!--                                <td class="<%#= delay_view_class_for(stream_status[:delay]) %>"><%#= ((stream_status[:delay] > 0) ? distance_of_time_in_words(stream_status[:delay]) : 'None') %></td>-->
                            </tr>
                        <% end %>
                    <% end %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>





<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default-light rounded">
            <div class="panel-heading">
                <div class="panel-title">Stream Status</div>
                <div class="panel-tools">
                    <%= simple_form_for :stream_status_filter, url: :root, method: :get, html: {class: 'form-inline'} do |f| %>
                        <%= f.input :from_date, as: :hidden, label: false, wrapper: false %>
                        <%= f.input :to_date, as: :hidden, label: false, wrapper: false %>
                        <%= f.input :stream, collection: Stream::STREAMS, selected: @stream.name, include_blank: false, label: false, wrapper: false, input_html: {class: 'default-select2 input-sm rounded m-right-5'} %>
                        <%= f.input :stage, collection: Stage::STAGES, selected: (@stage.name rescue Stage.first), include_blank: false, label: false, wrapper: false, input_html: {class: 'default-select2 input-sm rounded m-right-5'} %>
                    <%= f.input :all_stages, as: :hidden,label: false, wrapper: false ,:input_html => {:value => "no"} %>
                        <div id="stream-status-daterange" class="btn btn-sm btn-default-outline rounded m-right-5">
                            <i class="fa fa-calendar m-right-5"></i>
                            <span></span>
                            <i class="fa fa-angle-down m-left-5"></i>
                        </div>
                        <%= f.submit 'Filter', class: 'btn btn-success btn-sm rounded rippler', data: {disable_with: 'Processing...'} %>
                    <% end %>
                </div>
            </div>

            <div class="panel-body">
                <div class="pull-right">
                    <table class="table-condensed table-hover">
                        <tbody>
                        <tr>
                            <td>Average Delay:</td>
                            <th class="<%= delay_view_class_for(@average_delay) %>"><%= distance_of_time_in_words(@average_delay) rescue '' %></th>
                        </tr>
                        </tbody>
                    </table>
                </div>

                <table class="table table-condensed table-hover">
                    <thead>
                    <tr>
                        <th>#</th>
                        <th>Stage</th>
                        <th>Batch</th>
                        <th>On Date</th>
                        <th>Delay</th>
                    </tr>
                    </thead>
                    <tbody>
                    <% if @stream_statuses.present? %>
                        <% @stream_statuses.each_with_index do |stream_status, index| %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= stream_status[:stage] %></td>
                                <td><%= stream_status[:batch] %></td>
                                <td><%= stream_status[:on_date] %></td>
                                <td class="<%= delay_view_class_for(stream_status[:delay]) %>"><%= ((stream_status[:delay] > 0) ? distance_of_time_in_words(stream_status[:delay]) : 'None') %></td>
                            </tr>
                        <% end %>
                    <% end %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>





<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default-light rounded">
            <div class="panel-heading">
                <div class="panel-title">Stream Parameter Data</div>
                <div class="panel-tools">
                    <%= simple_form_for :reactor_attribute_filter, url: :reactor_attribute_data_dashboards, method: :post, remote: true, html: {id: 'reactor-attribute-filter-form', class: 'form-inline'} do |f| %>
                        <%= f.input :from_date, as: :hidden, label: false, wrapper: false %>
                        <%= f.input :to_date, as: :hidden, label: false, wrapper: false %>
                        <%= f.input :stream_product, collection: [], include_blank: false, label: false, wrapper: false, input_html: {id: 'stream-product-select', class: 'default-select2 input-sm rounded m-right-5'} %>
                        <%= f.input :attribute, collection: BatchLog::ATTRIBUTES, include_blank: false, label: false, wrapper: false, input_html: {class: 'default-select2 input-sm rounded m-right-5'} %>
                        <div id="reactor-attribute-daterange" class="btn btn-sm btn-default-outline rounded m-right-5">
                            <i class="fa fa-calendar m-right-5"></i>
                            <span></span>
                            <i class="fa fa-angle-down m-left-5"></i>
                        </div>
                        <%= f.submit 'Filter', class: 'btn btn-success btn-sm rounded rippler', data: {disable_with: 'Processing...'} %>
                    <% end %>
                </div>
            </div>

            <div class="panel-body">
                <div class="pull-right">
                    <table class="table-condensed table-hover">
                        <tbody>
                        <tr>
                            <td>Average Value:</td>
                            <th id="average-attribute-value-holder"></th>
                        </tr>
                        </tbody>
                    </table>
                </div>

                <div id="reactor-attribute-chart-holder">
                    <canvas id="reactor-attribute-chart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>




<div id="chart-modal" class="modal fade" role="dialog">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Scatter Plot Chart</h4>
      </div>
      <div class="modal-body">
        <div id="scatter-plot-holder"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>

  </div>
</div>

<script>
    setDaterange = function (date_range_picker, start, end, start_element, end_element) {
        date_range_picker.find('span').html((start.format('DD/MM/YYYY')) + " - " + (end.format('DD/MM/YYYY')));
        start_element.val(start.format('DD/MM/YYYY'));
        end_element.val(end.format('DD/MM/YYYY'));
    };

    initDateRangePicker = function (date_range_picker, start_date, end_date, start_element, end_element) {
        if (date_range_picker.length > 0) {
            start = moment(start_date);
            end = moment(end_date);
            setDaterange(date_range_picker, start, end, start_element, end_element);
            date_range_picker.daterangepicker({
                applyClass: 'btn-primary',
                opens: 'left',
                startDate: start,
                endDate: end,
                locale: {
                    format: 'MMMM Do YYYY'
                }
            }, function (start, end, label) {
                setDaterange(date_range_picker, start, end, start_element, end_element);
            });
        }
    };


    $(document).ready(function () {
        $.ajax({
            url: '<%= get_segregated_products_streams_path %>',
            method: "POST",
            dataType: "json",
        }).done(function (response) {
            $("#stream-product-select").select2({data: response});
        });

        initDateRangePicker($('#stream-status-daterange'), '<%= @from_date %>', '<%= @to_date %>', $('#stream_status_filter_from_date'), $('#stream_status_filter_to_date'));
        initDateRangePicker($('#stream-report-daterange'), '<%= @from_date %>', '<%= @to_date %>', $('#stream_report_filter_from_date'), $('#stream_report_filter_to_date'));
        initDateRangePicker($('#product-report-daterange'), '<%= @from_date %>', '<%= @to_date %>', $('#product_report_filter_from_date'), $('#product_report_filter_to_date'));
        initDateRangePicker($('#reactor-attribute-daterange'), moment(), moment(), $('#reactor_attribute_filter_from_date'), $('#reactor_attribute_filter_to_date'));
    });

    $(document).on('ajax:success', 'form#reactor-attribute-filter-form', function (event) {
        config = {
            type: 'line',
            data: event.detail[0].data,
            options: {
                responsive: true,
                maintainAspectRatio: true,
                title: {
                    display: true,
                    text: 'Reactor Attribute Analysis'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Date'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Value'
                        }
                    }]
                }
            }
        };

        console.log(config);

        $('#reactor-attribute-chart-holder').empty().append('<canvas id="reactor-attribute-chart"></canvas>');
        new Chart($('#reactor-attribute-chart')[0].getContext('2d'), config);

        $('#average-attribute-value-holder').empty().append(event.detail[0].average_value);
    });


    function initScatterChart(d,sop,avg){
        $('#scatter-plot-holder').empty().append('<canvas id="scatter-plot-chart"></canvas>');

        var sop_bct = [];
        JSON.parse(d).forEach(function(data){
            sop_bct.push({x:data.x,y:parseInt(sop)})
        });
        var avg_bct = [];
        JSON.parse(d).forEach(function(data){
            avg_bct.push({x:data.x,y:parseInt(avg)})
        });

        var scatterChart = new Chart($('#scatter-plot-chart')[0].getContext('2d'), {
            type: 'scatter',
            data: {
                datasets: [{
                    label: 'Batch BCTs in hrs',
                    data: JSON.parse(d),
                    pointBackgroundColor:"#000"
                },
                    {
                        label: 'SOP BCT in hrs',
                        data: sop_bct,
                        showLine: true,
                        borderColor: 'green',
                        borderWidth: 2
                    },
                    {
                        label: 'Avg. SOP in hrs',
                        data: avg_bct,
                        showLine: true,
                        borderColor: 'yellow',
                        borderWidth: 2
                    },


                ]
            },
            options: {
                scales: {
                    xAxes: [{
                        type: 'linear',
                        position: 'bottom',
                        labelString: "Batches"
                    }],
                    yAxes: [{
                        type: 'linear',

                        labelString: "BCT in hrs"
                    }],

                }
            }
        });
        $("#chart-modal").modal('show')
    }
</script>